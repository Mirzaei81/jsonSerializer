# Generated by Django 5.1.3 on 2024-11-16 06:17

import Invoices.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postalCode', models.CharField(max_length=20, verbose_name='postal_code')),
                ('address', models.TextField(verbose_name='address')),
                ('issue_date', models.DateField(default=django.utils.timezone.now, verbose_name='issueDate')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(default=Invoices.models.randomUID, max_length=33, unique=True, verbose_name='_id')),
                ('code', models.CharField(max_length=255, verbose_name='code')),
                ('organization_1', models.CharField(max_length=255, verbose_name='organization_1')),
            ],
        ),
        migrations.CreateModel(
            name='Inquiry_list',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('result', models.CharField(choices=[('تایید شده', 'تایید شده'), ('رد شده', 'رد شده')], max_length=255, verbose_name='result')),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Inquiries_lists', to='Invoices.data')),
            ],
        ),
        migrations.AddField(
            model_name='data',
            name='License',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Licences', to='Invoices.license', verbose_name='licesne_id'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.CharField(default=Invoices.models.randomUID, max_length=32, unique=True, verbose_name='uid')),
                ('code', models.IntegerField(verbose_name='code')),
                ('phone', models.CharField(max_length=11, unique=True, validators=[Invoices.models.CustomUser.phoneValidator], verbose_name='phone')),
                ('gender', models.BooleanField(default=False, verbose_name='gender')),
                ('father_name', models.CharField(max_length=255, verbose_name='father_name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='data',
            name='Issuer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL),
        ),
    ]
